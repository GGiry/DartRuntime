This document describe the translation strategy that should be done
by the compilation back-end during the generation phase.

list of runtime translatable types:
  nullable boolean
  boolean
  nullable integer
  integer
  range integer [min, max] (min can be -infinity, max can be +infinity)
  nullable double
  double
  nullable num  (base interface of int and double)
  num
  void
  nullable dynamic 
  dynamic
  nullable function type
  function type
  nullable interface type
  interface type
  
Some storage formats require more that one slot, in that case a discriminator
allows to know how the format is decomposed.
  
 NULL_VALUE is BigNum.NULL_VALUE
  
 ------------------      local|field storage  null         toBool                 toInt                      toInt32                   toDouble                                  toObject
  nullable boolean         Boolean            null         booleanValue()         --                         --                        --                                        ok 
  boolean                  boolean            --           ok                     --                         --                        --                                        Double.valueOf()
  nullable integer         BigNum|int         NULL_VALUE   --                     !NULL_VALUE                !NULL_VALUE+intValue()    !NULL_VALUE+doubleValue()|(double)        NULL_VALUE->null|new Integer()
  integer                  BigNum|int         --           --                     ok                         intValue()|ok             doubleValue|(double)                      ok|new Integer()
  integer? [32bit range]   Integer            null         --                     !null                      intValue()                doubleValue()                       ok
  integer  [32bit range]   int                --           --                     ok                         ok                        (double)                                  new Integer()
  nullable double          Double             null         --                     intValue()                 intValue()                doubleValue()                             ok
  double                   double             --           --                     asInt()                    (int)                     ok                                        new Double()
  nullable num             BigNum|int         NULL_VALUE   --                     asInt()                    !NULL_VALUE+intValue()    !NULL_VALUE+doubleValue()|(double)        NULL_VALUE->null|new Integer()
  num                      BigNum|int         --           --                     asInt()                    intValue()                doubleValue|(double)                      ok|new Integer()
  void                     void               --           --                     --                         --                        --                                        --
  nullable dynamic         Object             null         (Boolean)booleanValue  (Integer)intValue |        (Integer)intValue() |     (Integer)doubleValue |                    ok
                                                                                  BigNum |                   (BigNum)intValue() |      (BigNum)doubleValue |
                                                                                  (Double)intValue           (Double)intValue()        (Double)doubleValue
  dynamic                  Object             --           (Boolean)booleanValue  (Integer) -> ok |          (Integer)intValue |       (Integer)doubleValue|                     ok
                                                                                  (Double)intValue |         (BigNum)intValue() |      (Double)doubleValue|
                                                                                  BigNum                     (Double)intValue()        (BigNum)doubleValue
  nullable function type   MethodHandle       null         --                     --                         --                        --                                        --
  function type            MethodHandle       --           --                     --                         --                        --                                        --
  nullable interface type  interface          null         --                     --                         --                        --                                        --
  interface type           interface          --           --                     --                         --                        --                                        --
  
  
  
 Split Path optimization 
  
example:
  ...
  fibo(21)
  ...
  fibo(n) {                   n = [0..maxint], fibo -> [-inf, +inf]
    if (n<2) {   
      return 1;               n = [0..1] 
    }                         n = [2..maxint]     
    return fibo(n-1) +        fibo([1..maxint-1]) -> [-inf, +inf]
           fibo(n-2);         fibo([1..maxint-1]),-> [-inf, +inf]
                              +([-inf, +inf], [-inf, +inf]) -> [-inf, +inf] 
  }                           
  
  translation:
  
  fibo(I)I
    iload 0
    iconst_2
    if_icmpge l0
    iconst_1
    ireturn
  
 l0:
    iload 0
    iconst_1
    isub
 l1:
    invokestatic fibo (I)I
 l2:
    istore 1
    aconst_null
    astore 2
    
 l3:
    iload 0
    iconst_2
    isub
 l4:
    invokestatic fibo (I)I
 l5:
    istore 3
    aconst_null   
    astore 4
 
 l6:
    aload 2
    ifnonnull l7
    aload 4
    ifnonnull l7
    iload 1
    iload 3
 l8:
    invokestatic Math.addExact (II)I
 l9:
    istore 5
    actonst_null
    astore 6
    
 l10:
    aload 6
    ifnonnull l11
    iload 5
    ireturn
    
l12:
    astore 3
    iconst_0
    istore 1
    aload 3
    getfield ControlFlowException.value : Ljava/math/BigInteger;
    astore 3
    goto l3
    
l13:
    astore 5
    iconst_0
    istore 3
    aload 5
    getfield ControlFlowException.value : Ljava/math/BigInteger;
    astore 4
    goto l6
    
l7:
    iload 1
    aload 2
    iload 3
    aload 4
    invokestatic addBig (ILBigInteger;ILBigInteger;)LBigInteger;
    astore 6
    iconst_0
    istore 5
    goto l10

l14:
    astore 7
    iload 1
    iload 3
    invokestatic overflowAdd (II)LBigInteger;
    astore 6
    iconst_0
    istore 5
    goto l10
    
l11:
    aload 6
    invokestatic ControlFlowException.value (LBigInteger;)LControlFlowException;
    athrow
    
  trycatchblock l1, l2, l12, ControlFlowException
  trycatchblock l4, l5, l13, ControlFlowException
  trycatchblock l8, l9, l14, ArithmeticException
  
